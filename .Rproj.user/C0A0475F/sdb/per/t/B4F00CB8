{
    "collab_server" : "",
    "contents" : "#####################################################################################\n## Author: Daniel Sabanes Bove [daniel *.* sabanesbove *a*t* campus *.* lmu *.* de]\n## Project: BayesX\n## Time-stamp: <[ringDirxy.R] by DSB Sam 28/02/2009 19:18 (GMT) on daniel@puc-home>\n##\n## Description:\n## Private R code replacing maptools .ringDirxy.\n##\n## History:\n## 28/02/2009   file creation\n#####################################################################################\n\n.ringDirxy <- function (xy)              # matrix of x and y coordinates as columns\n{\n    xy <- as.matrix(xy)\n    nPoints <- nrow(xy)\n    \n    ## checks    \n    stopifnot(is.numeric(xy),\n              identical(ncol(xy), as.integer(2)),\n              nPoints >= 3)\n    \n    ## index vector from the 2nd to the 2nd but last point\n    inds <- seq_len(nPoints-2) + 1\n\n    ## the start point and the middle and tail matrix\n    start <- xy[1, ]                    # here the drop of dims is OK\n    middle <- xy[inds, , drop=FALSE]    # here prevent drop of dims if there are only 3 points\n    tail <- xy[inds + 1, , drop=FALSE]\n\n    ## compute twice the signed areas\n    areas <- (middle[, 1] - start[1]) * (tail[, 2] - start[2]) -\n        (tail[, 1] - start[1]) * (middle[, 2] - start[2])\n    ## and sum up to total twice signed area of the polygon\n    total <- sum(areas)\n\n    ## the sign then gives the direction\n    if (total > 0)\n    {\n        return(as.integer(-1))          # counter-clockwise\n    } else {\n        return(as.integer(1))           # clockwise\n    }\n}\n\n\n## closer analogue to original & C functions is here for documentation:\n\n## .ringDirxy <- function (xy) \n## {\n##     a <- xy[, 1]\n##     b <- xy[, 2]\n##     nvx <- length(b)\n\n##     ## previous:\n##     ## res <- .C(\"RFindCG\", as.integer(nvx), as.double(a), as.double(b), \n##     ##     as.double(0), as.double(0), as.double(0), PACKAGE = \"maptools\")\n\n##     ## now:\n##     ## match args in RFindCG\n##     n <- nvx\n##     x <- a\n##     y <- b\n##     xc <- 0\n##     yc <- 0\n##     area <- 0\n\n##     ## previous:\n##     ## \tint i, nn;\n##     ## \ttPointd *P;\n##     ## \ttPointd CG;\n##     ## \tdouble Areasum2;\n##     ## \tnn = n[0];\n##     ## \tP = (tPointd *) R_alloc(nn, sizeof(tPointd));\n##     ## \tfor (i=0; i<nn; i++) {\n##     ## \t\tP[i][0] = x[i];\n##     ## \t\tP[i][1] = y[i];\n##     ## \t} \n\n##     ## now:\n##     P <- cbind(x, y)\n\n##     ## previous:\n##     ## \t FindCG(nn, P, CG, &Areasum2);\n##     ## that is essentially\n##     ## \t for (i = 1; i < n-1; i++) {\n##     ## \t        Centroid3( P[0], P[i], P[i+1], Cent3 );\n##     ## \t        A2 =  Area2( P[0], P[i], P[i+1]);\n##     ## \t\tCG[0] += A2 * Cent3[0];\n##     ## \t\tCG[1] += A2 * Cent3[1];\n##     ## \t\tAreasum2[0] += A2;\n##     ## \t      }\n##     ## \n##     ## now: (because we only need the Areasum2 here!)\n\n##     ## Returns twice the signed area of the triangle determined by a,b,c,\n##     ## positive if a,b,c are oriented ccw, and negative if cw.\n##     twiceSignedArea <- function(a, b, c)\n##     {\n##         return((b[1] - a[1]) * (c[2] - a[2]) - (c[1] - a[1]) * (b[2] - a[2]))\n##     }\n\n##     ## the loop from the 2nd to the (n-1)th point:\n##     for(i in (seq_len(n-2) + 1))\n##     {\n##         area <- area + twiceSignedArea(a=P[1, ],\n##                                        b=P[i, ],\n##                                        c=P[i+1, ])\n##     }\n        \n##     ## previous:\n##     ## \txc[0] = CG[0];\n##     ## \tyc[0] = CG[1];\n##     ## \tarea[0] = Areasum2/2;\n##     ## now: \n##     ## not necessary, as only the sign of area is relevant.\n    \n##     if (area > 0)\n##     {\n##         return(as.integer(-1))\n##     } else {\n##         return(as.integer(1))\n##     }\n## }\n",
    "created" : 1489880799658.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1900992405",
    "id" : "B4F00CB8",
    "lastKnownWriteTime" : 1489880696,
    "last_content_update" : 1489880696,
    "path" : "~/workspace/R2BayesX/R/ringDirxy.R",
    "project_path" : "R/ringDirxy.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}